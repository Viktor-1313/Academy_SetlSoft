let adminModuleData = {
  title: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ü–û",
  totalSections: 5,
  currentSection: 1,
  progress: 0,
  keyPoints: [
    "–†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–∏—Å—Ç–µ–º",
    "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è",
    "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º –°–¢–ö",
    "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞"
  ],
  sections: [
    {
      id: 1,
      title: "–†–æ–ª—å –∏ –ø–æ–ª–Ω–æ–º–æ—á–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ü–û",
      status: "current",
      type: "theory",
      duration: "12 –º–∏–Ω",
      icon: "üõ†Ô∏è",
      description: "–ö–ª—é—á–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∑–∞–¥–∞—á–∏ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.",
      content: `
        <div>
          <h4>–ö—Ç–æ —Ç–∞–∫–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ü–û?</h4>
          <p>–≠—Ç–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Å—Ç–∞–±–∏–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã, –∞ —Ç–∞–∫–∂–µ –∑–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –°–¢–ö, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ò–¢-—Å—Ä–µ–¥—ã.</p>
        </div>
      `
    },
    {
      id: 2,
      title: "–°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –°–¢–ö",
      status: "locked",
      type: "theory",
      duration: "10 –º–∏–Ω",
      icon: "üìù",
      description: "–ü—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã —Å–æ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –∫–∞—Ä—Ç–∞–º–∏ ‚Äî –æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏.",
      content: `
        <div>
          <h4>–†–∞–±–æ—Ç–∞ —Å–æ –°–¢–ö</h4>
          <ul>
            <li>–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤—ã—Ö –∫–∞—Ä—Ç —Å –∫–æ–º–ø–ª–µ–∫—Å–∞–º–∏ —Ä–∞–±–æ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–µ—Ç–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–π: –æ–ø–∞–ª—É–±–∫–∞, –∞—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –±–µ—Ç–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ)</li>
            <li>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —à–∞–≥–æ–≤ –≤ –°–¢–ö</li>
            <li>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –æ–ø–µ—Ä–∞—Ü–∏–π</li>
          </ul>
        </div>
      `
    },
    {
      id: 3,
      title: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –∑–∞–º–µ—á–∞–Ω–∏—è–º–∏",
      status: "locked",
      type: "theory",
      duration: "10 –º–∏–Ω",
      icon: "üìÅ",
      description: "–°–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—á–∞–Ω–∏—è–º–∏ –ø–æ –∫–∞—á–µ—Å—Ç–≤—É.",
      content: `
        <div>
          <h4>–ü–æ—Ä—Ç—Ñ–µ–ª—å –ø—Ä–æ–µ–∫—Ç–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h4>
          <ul>
            <li>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤</li>
            <li>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</li>
            <li>–†–∞–±–æ—Ç–∞ —Å –∑–∞–º–µ—á–∞–Ω–∏—è–º–∏: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, –≤–µ–¥–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏</li>
          </ul>
        </div>
      `
    },
    {
      id: 4,
      title: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ",
      status: "locked",
      type: "theory",
      duration: "7 –º–∏–Ω",
      icon: "üîí",
      description: "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ, –∫–æ–Ω—Ç—Ä–æ–ª—å —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π, –æ—Ç–∫–∞—Ç –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å.",
      content: `
        <div>
          <h4>–ë–∞–∑–æ–≤—ã–µ –º–µ—Ä—ã –ò–¢-–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</h4>
          <ul>
            <li>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π</li>
            <li>–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π</li>
            <li>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –ü–û ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤</li>
          </ul>
        </div>
      `
    },
    {
      id: 5,
      title: "–ò—Ç–æ–≥–æ–≤—ã–π —Ç–µ—Å—Ç",
      status: "locked",
      type: "test",
      duration: "6 –º–∏–Ω",
      icon: "üß™",
      description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –ø–æ –º–æ–¥—É–ª—è–º ¬´–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ü–û¬ª.",
      content: `
        <div>
          <h4>–ò—Ç–æ–≥–æ–≤—ã–π —Ç–µ—Å—Ç</h4>
          <p>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã. –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤—ã–¥–∞—ë—Ç—Å—è –ø—Ä–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ—Ç 80%.</p>
          <button class="btn btn--primary btn--lg" onclick="startFinalTestAdmin()">–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</button>
        </div>
      `
    }
  ]
};

let adminTestQuestions = [
  {
    question: "–ö–∞–∫–æ–≤–∞ –æ—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ü–û?",
    options: [
      "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ë–î",
      "–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –±–µ—Å–ø–µ—Ä–µ–±–æ–π–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
      "–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π",
      "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫—É–ø–∫–∞–º–∏"
    ],
    correct: 1
  },
  {
    question: "–ß—Ç–æ –≤–∫–ª—é—á–∞—é—Ç —Ç–∏–ø–æ–≤—ã–µ –°–¢–ö (—Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç—ã)?",
    options: [
      "–¢–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —Ç–µ—Ö–Ω–∏–∫–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
      "–ö–æ–º–ø–ª–µ–∫—Å –°–ú–† –∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π",
      "–°–ø–∏—Å–æ–∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤",
      "–¢–∞–±–ª–∏—Ü—É –∫–∞–¥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞"
    ],
    correct: 1
  },
  {
    question: "–ß—Ç–æ –æ–±—è–∑–∞–Ω —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π —É—è–∑–≤–∏–º–æ—Å—Ç–∏?",
    options: [
      "–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ",
      "–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É",
      "–°–æ–æ–±—â–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º",
      "–û—Ç–∫–ª—é—á–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"
    ],
    correct: 0
  },
  {
    question: "–ß—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç ¬´–ø–æ—Ä—Ç—Ñ–µ–ª—å –ø—Ä–æ–µ–∫—Ç–æ–≤¬ª?",
    options: [
      "–°–ª–µ–¥–∏—Ç—å –∑–∞ –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç",
      "–í–µ—Å—Ç–∏ —É—á–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤, –∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ –∏ –∑–∞–º–µ—á–∞–Ω–∏–π",
      "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞–∫—É–ø–æ—á–Ω—ã–µ –∑–∞—è–≤–∫–∏",
      "–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—ã–Ω–æ–∫ —Ç—Ä—É–¥–∞"
    ],
    correct: 1
  },
  {
    question: "–ö–∞–∫–æ–π –≤–∏–¥ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∫–ª—é—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è?",
    options: [
      "–ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–Ω–æ–µ",
      "–ü–æ–ª–Ω–æ–µ",
      "–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ",
      "–õ–æ–∫–∞–ª—å–Ω–æ–µ"
    ],
    correct: 0
  }
];

let adminCurrentSectionIndex = 0;
let adminCompletedSections = new Set();
let adminProgress = 0;
let adminTestState = {
  current: 0,
  answers: Array(adminTestQuestions.length).fill(null),
  timer: null,
  timeLeft: 600
};
let adminPages = {};

document.addEventListener("DOMContentLoaded", function() {
  adminPages = {
    overview: document.getElementById("moduleOverviewPage"),
    learning: document.getElementById("learningPage"),
    test: document.getElementById("testPage"),
    certificate: document.getElementById("certificatePage")
  };
  adminInitializeApp();
  adminAttachEventListeners();
  adminUpdateAuthHeader();
});

function adminInitializeApp() {
  adminProgress = adminModuleData.progress;
  adminCurrentSectionIndex = adminModuleData.currentSection - 1;
  adminModuleData.sections.forEach((section, idx) => {
    if (section.status === "completed") adminCompletedSections.add(idx);
  });
  adminUpdateOverviewProgress();
  adminRenderKeyPoints();
}
function adminAttachEventListeners() {
  const startBtn = document.getElementById("startLearningBtn");
  const prevBtn = document.getElementById("prevBtn");
  const nextBtn = document.getElementById("nextBtn");
  const testPrevBtn = document.getElementById("testPrevBtn");
  const testNextBtn = document.getElementById("testNextBtn");
  const finishTestBtn = document.getElementById("finishTestBtn");
  const downloadCertBtn = document.getElementById("downloadCertBtn");
  const backToModulesBtn = document.getElementById("backToModulesBtn");

  if (startBtn) startBtn.addEventListener("click", adminStartLearning);
  if (prevBtn) prevBtn.addEventListener("click", () => adminNavigateSection(-1));
  if (nextBtn) nextBtn.addEventListener("click", () => adminNavigateSection(1));
  if (testPrevBtn) testPrevBtn.addEventListener("click", () => adminNavigateTest(-1));
  if (testNextBtn) testNextBtn.addEventListener("click", () => adminNavigateTest(1));
  if (finishTestBtn) finishTestBtn.addEventListener("click", adminFinishTest);
  if (downloadCertBtn) downloadCertBtn.addEventListener("click", adminDownloadCertificate);
  if (backToModulesBtn) backToModulesBtn.addEventListener("click", () => adminShowPage("overview"));
}

function adminShowPage(page) {
  Object.values(adminPages).forEach(pg => { if (pg) pg.classList.remove("active"); });
  if (adminPages[page]) adminPages[page].classList.add("active");
}
function adminStartLearning() {
  adminShowPage("learning");
  adminRenderCurrentSection();
  adminRenderSidebar();
  adminUpdateAllProgress();
}
function adminNavigateSection(direction) {
  const newIndex = adminCurrentSectionIndex + direction;
  if (newIndex < 0 || newIndex >= adminModuleData.sections.length) return;
  if (direction > 0 && !adminCompletedSections.has(adminCurrentSectionIndex)) {
    adminCompletedSections.add(adminCurrentSectionIndex);
    adminUpdateLearningProgress();
  }
  if (newIndex > adminCurrentSectionIndex && !adminCompletedSections.has(adminCurrentSectionIndex)) return;
  adminCurrentSectionIndex = newIndex;
  adminRenderCurrentSection();
  adminRenderSidebar();
  adminUpdateAllProgress();
}
function adminRenderCurrentSection() {
  const section = adminModuleData.sections[adminCurrentSectionIndex];
  document.getElementById("sectionTitle").textContent = `–†–∞–∑–¥–µ–ª ${section.id}: ${section.title}`;
  document.getElementById("sectionDescription").textContent = section.description;
  document.getElementById("learningBody").innerHTML = section.content;
  adminUpdateNavigationButtons();
}
function adminRenderSidebar() {
  const c = document.getElementById("sidebarNavItems");
  if (!c) return;
  c.innerHTML = adminModuleData.sections.map((s, idx) => {
    let status = "";
    if (idx === adminCurrentSectionIndex) status = "active";
    else if (adminCompletedSections.has(idx)) status = "completed";
    else if (idx > adminCurrentSectionIndex) status = "locked";
    return `<div class="sidebar-nav-item ${status}" data-section="${idx}">
      <span class="sidebar-nav-icon">${s.icon}</span>
      <div>
        <div class="sidebar-nav-title">${s.title}</div>
        <small>${s.duration}</small>
      </div>
    </div>`;
  }).join("");
  c.querySelectorAll(".sidebar-nav-item").forEach(item => {
    item.addEventListener("click", function() {
      const idx = parseInt(this.dataset.section);
      if (idx <= adminCurrentSectionIndex || adminCompletedSections.has(idx - 1)) {
        adminCurrentSectionIndex = idx;
        adminRenderCurrentSection();
        adminRenderSidebar();
        adminUpdateAllProgress();
      } else {
        alert("–ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–∞–∑–¥–µ–ª—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞");
      }
    });
  });
}
function adminRenderKeyPoints() {
  const c = document.getElementById("keyPointsList");
  if (!c) return;
  c.innerHTML = adminModuleData.keyPoints.map(p => `<li>${p}</li>`).join('');
}
function adminUpdateNavigationButtons() {
  const prevBtn = document.getElementById("prevBtn");
  const nextBtn = document.getElementById("nextBtn");
  if (prevBtn) prevBtn.style.visibility = adminCurrentSectionIndex === 0 ? "hidden" : "visible";
  if (nextBtn) {
    nextBtn.textContent = adminCurrentSectionIndex === adminModuleData.sections.length - 1
      ? "–ö —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —Ç–µ—Å—Ç—É ‚Üí" : "–°–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª ‚Üí";
  }
}
function adminUpdateAllProgress() {
  adminUpdateOverviewProgress();
  adminUpdateLearningProgress();
}
function adminUpdateOverviewProgress() {
  const progress = Math.round((adminCompletedSections.size / adminModuleData.sections.length) * 100);
  adminProgress = progress;
  const pPercent = document.getElementById("progressPercent");
  const pFill = document.getElementById("progressFill");
  if (pPercent) pPercent.textContent = `${progress}%`;
  if (pFill) pFill.style.width = `${progress}%`;
}
function adminUpdateLearningProgress() {
  const fill = document.getElementById("headerProgressFill");
  const text = document.getElementById("headerProgressText");
  if (fill) fill.style.width = `${adminProgress}%`;
  if (text) text.textContent = `${adminProgress}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ`;
}
function completeExerciseAdmin(idx) {
  alert(`–ü–æ–ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!`);
  adminCompletedSections.add(adminCurrentSectionIndex);
  adminUpdateLearningProgress();
}
// --- –¢–µ—Å—Ç –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç ---
function startFinalTestAdmin() { adminStartTest(); }
function adminStartTest() {
  adminCompletedSections.add(adminCurrentSectionIndex);
  adminUpdateAllProgress();
  adminShowPage("test");
  adminTestState.current = 0;
  adminTestState.answers.fill(null);
  adminTestState.timeLeft = 600;
  adminRenderTestQuestion();
  adminUpdateTestProgress();
  adminStartTestTimer();
}
function adminRenderTestQuestion() {
  const q = adminTestQuestions[adminTestState.current];
  const c = document.getElementById("testContent");
  if (!c) return;
  c.innerHTML = `
    <div class="test-question">
      <h3>–í–æ–ø—Ä–æ—Å ${adminTestState.current + 1}</h3>
      <p>${q.question}</p>
      <div class="test-answers">
        ${q.options.map((o, i) => `
          <label class="test-answer ${adminTestState.answers[adminTestState.current] === i ? 'selected' : ''}">
            <input type="radio" name="adminTestAnswer" value="${i}" ${adminTestState.answers[adminTestState.current] === i ? 'checked' : ''}>
            <span class="test-answer-text">${o}</span>
          </label>
        `).join('')}
      </div>
    </div>
  `;
  c.querySelectorAll('input[name="adminTestAnswer"]').forEach(radio => {
    radio.addEventListener('change', function(e) {
      adminTestState.answers[adminTestState.current] = parseInt(e.target.value);
      adminRenderTestQuestion();
    });
  });
  adminUpdateTestNavigation();
}
function adminUpdateTestNavigation() {
  const prevBtn = document.getElementById("testPrevBtn");
  const nextBtn = document.getElementById("testNextBtn");
  const finishBtn = document.getElementById("finishTestBtn");
  if (prevBtn) prevBtn.style.visibility = adminTestState.current === 0 ? "hidden" : "visible";
  const isLast = adminTestState.current === adminTestQuestions.length - 1;
  if (nextBtn) nextBtn.classList.toggle("hidden", isLast);
  if (finishBtn) finishBtn.classList.toggle("hidden", !isLast);
}
function adminNavigateTest(dir) {
  const newIdx = adminTestState.current + dir;
  if (newIdx >= 0 && newIdx < adminTestQuestions.length) {
    adminTestState.current = newIdx;
    adminRenderTestQuestion();
    adminUpdateTestProgress();
  }
}
function adminUpdateTestProgress() {
  const p = Math.round(((adminTestState.current + 1) / adminTestQuestions.length) * 100);
  const fill = document.getElementById("testProgressFill");
  const text = document.getElementById("testProgressText");
  if (fill) fill.style.width = `${p}%`;
  if (text) text.textContent = `–í–æ–ø—Ä–æ—Å ${adminTestState.current + 1} –∏–∑ ${adminTestQuestions.length}`;
}
function adminStartTestTimer() {
  adminUpdateTestTimer();
  if (adminTestState.timer) clearInterval(adminTestState.timer);
  adminTestState.timer = setInterval(() => {
    adminTestState.timeLeft--;
    adminUpdateTestTimer();
    if (adminTestState.timeLeft <= 0) {
      clearInterval(adminTestState.timer);
      adminFinishTest();
    }
  }, 1000);
}
function adminUpdateTestTimer() {
  const m = Math.floor(adminTestState.timeLeft / 60);
  const s = adminTestState.timeLeft % 60;
  const t = document.getElementById("testTimer");
  if (t) t.textContent = `${m}:${s.toString().padStart(2, '0')}`;
}
function adminFinishTest() {
  if (adminTestState.timer) clearInterval(adminTestState.timer);
  const correct = adminTestQuestions.reduce(
    (acc, q, idx) => acc + (adminTestState.answers[idx] === q.correct ? 1 : 0), 0
  );
  const score = Math.round((correct / adminTestQuestions.length) * 100);
  if (score >= 80) {
    adminProgress = 100;
    adminUpdateAllProgress();
    adminShowCertificate(score);
  } else {
    alert(`–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${score}%. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º 80%.`);
    adminTestState.current = 0;
    adminTestState.answers.fill(null);
    adminTestState.timeLeft = 600;
    adminRenderTestQuestion();
    adminUpdateTestProgress();
    adminStartTestTimer();
  }
}
function adminShowCertificate(score) {
  document.getElementById("certificateDate").textContent = new Date().toLocaleDateString("ru-RU");
  document.getElementById("certificateScore").textContent = `${score}%`;
  adminShowPage("certificate");
}
function adminDownloadCertificate() {
  const t = `
–°–ï–†–¢–ò–§–ò–ö–ê–¢ ICONA 2.0
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ü–û

–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
–î–∞—Ç–∞: ${new Date().toLocaleDateString("ru-RU")}
–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: ${document.getElementById("certificateScore").textContent}
`;
  const blob = new Blob([t], { type: "text/plain;charset=utf-8" });
  const url = URL.createObjectURL(blob);
  const a = document.createElement("a");
  a.href = url;
  a.download = "certificate_icona_admin.txt";
  a.click();
  URL.revokeObjectURL(url);
  alert("–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!");
}

// --- –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è —à–∞–ø–∫–∏ ---
function adminUpdateAuthHeader() {
  const isLoggedIn = localStorage.getItem('isLoggedIn') === '1' || localStorage.getItem('isLoggedIn') === 'true';
  const navUser = document.getElementById('nav-user');
  const loginBtn = document.getElementById('login-btn');
  const navUserName = document.getElementById('nav-user-name');
  const navUserPhoto = document.getElementById('nav-user-photo');
  let userData = {};
  try { userData = JSON.parse(localStorage.getItem('userData') || '{}'); } catch {}
  let name = (userData.firstname || '') + (userData.lastname ? ' ' + userData.lastname : '') || "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä";
  if (isLoggedIn) {
    if (navUser) navUser.style.display = 'flex';
    if (loginBtn) loginBtn.style.display = 'none';
    if (navUserName) navUserName.textContent = name;
    if (navUserPhoto) navUserPhoto.src = localStorage.getItem('userPhoto') || userData.photo || 'https://avatars.dicebear.com/api/personas/username.svg';
  } else {
    if (navUser) navUser.style.display = 'none';
    if (loginBtn) loginBtn.style.display = 'inline-block';
  }
}
window.addEventListener('focus', adminUpdateAuthHeader);
document.getElementById('nav-user')?.addEventListener('click', function() {
  window.location.href = 'profile.html';
});
